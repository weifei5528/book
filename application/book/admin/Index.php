<?php
namespace app\book\admin;

use app\admin\controller\Admin;
use app\book\model\Books as BookModel;
use app\common\builder\ZBuilder;
use app\book\model\Categories as CategoryModel;
class Index extends Admin
{
    /**
     * 图书列表
     */
    public function index()
    {
        // 获取查询条件
        $map = $this->getMap();
        $order = $this->getOrder();
        // 数据列表
        $data_list = BookModel::where($map)->order($order)->paginate();
        
        // 使用ZBuilder快速创建数据表格
        return ZBuilder::make('table')
            ->setPageTitle('图书列表') // 页面标题
            ->setTableName('books') // 设置表名
            ->setSearch(['name' => '图书名称', 'id' => 'ID']) // 设置搜索参数
            ->addColumns([ // 批量添加列
                ['id', 'ID'],
                ['img','封面','picture'],
                ['name', '角色名称'],
                ['cat_id','分类','callback',function($val){
                    return CategoryModel::getName($val);
                }],
                ['author', '作者'],
                ['publish', '出版社'],
                ['from', '来源'],
                ['status', '状态', 'switch'],
                ['create_time', '添加时间', 'datetime'],
                ['update_time', '更新时间', 'datetime'],
                ['right_button', '操作', 'btn']
            ])
            ->addTopButtons('add,enable,disable') // 批量添加顶部按钮
            ->addRightButtons('edit') // 批量添加右侧按钮
            ->addRightButton('see', ['href' => url('Content/index', ['id' => '__id__']),'icon'=>'fa fa-fw fa-list-alt','title'=>'列表'])
            //->replaceRightButton(['id' => 1], '<button class="btn btn-danger btn-xs" type="button" disabled>不可操作</button>') // 修改id为1的按钮
            ->setRowList($data_list) // 设置表格数据
            ->fetch(); // 渲染模板
    }
    /**
     * 添加图书
     */
    public function add()
    {
        // 保存数据
        if ($this->request->isPost()) {
            $data = $this->request->post();
            // 验证
            $result = $this->validate($data, 'Books');
            // 验证失败 输出错误信息
            if(true !== $result) $this->error($result);
            if ($book = BookModel::create($data)) {
                // 记录行为
                action_log('book_add', 'book', $book['id'], UID);
                $this->success('新增成功', url('index'));
            } else {
                $this->error('新增失败');
            }
        }
        $category_list = CategoryModel::getList();
        $type_list = config('book_type_list');
         // 使用ZBuilder快速创建表单
        return ZBuilder::make('form')
            ->setPageTitle('新增') // 设置页面标题
            ->addFormItems([ // 批量添加表单项
                ['text', 'name', '图书名称', '必填，可由汉字、英文字母、数字组成'],
                ['image', 'img', '封面'],
                ['select', 'cat_id', '分类', '', $category_list],
                ['text', 'author', '作者', '选填'],
                ['text', 'publish', '出版社', '选填'],
                ['text', 'from', '来源','选填'],
                ['textarea', 'description', '描述'],
                ['radio','type','类型','图书类型(音频、视频、文字等)',$type_list,2],
                ['radio', 'status', '状态', '', ['禁用', '启用'], 1]
            ])
            ->fetch();
    }
     /**
      * 删除
      */
//      public function disable($record = [])
//      {
//          $ids = input('ids/a');
//          $record = json_encode($ids);
//          return parent::disable($record); // TODO: Change the autogenerated stub
//      }
}

?>